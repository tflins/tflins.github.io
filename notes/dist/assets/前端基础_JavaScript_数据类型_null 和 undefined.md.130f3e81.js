import{o as e,c as n,a as d}from"./app.57353960.js";const a='{"title":"null 和 undefined","description":"","frontmatter":{},"headers":[{"level":2,"title":"相同点","slug":"相同点"},{"level":2,"title":"不同点","slug":"不同点"}],"relativePath":"前端基础/JavaScript/数据类型/null 和 undefined.md","lastUpdated":1615518465089}',l={},i=d('<h1 id="null-和-undefined"><a class="header-anchor" href="#null-和-undefined" aria-hidden="true">#</a> null 和 undefined</h1><p>在 JavaScript 中 <code>null == undefined</code> 为 <code>true</code> ，null 表示为空，是 JavaScript 的关键字，常用来描述 “空值”，从逻辑上看 null 表示一个空对象指针。undefined 是声明一个变量但没有进行初始化的时候的默认值，表述变量未初始化。</p><h2 id="相同点"><a class="header-anchor" href="#相同点" aria-hidden="true">#</a> 相同点</h2><ul><li>都是原始数据类型，都没有函数可以调用。</li><li>在转成 boolean 类型的时候，都是 false</li></ul><h2 id="不同点"><a class="header-anchor" href="#不同点" aria-hidden="true">#</a> 不同点</h2><ul><li><p>null 是关键词、undefined 不是关键词</p><p>在非严格模式下：</p><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token keyword">null</span> <span class="token comment">// 报错：意外的标记</span>\n<span class="token keyword">var</span> <span class="token keyword">undefined</span> <span class="token comment">// 不报错</span>\n</code></pre></div></li><li><p><code>typeof null</code> 为 <code>&#39;object&#39;</code> ，<code>typeof undefined</code> 为 <code>&#39;undefined&#39;</code></p></li><li><p>null 转成数字的时候值为 0 ，undefined 转为数字是 <code>NaN</code></p></li></ul>',6);l.render=function(d,a,l,o,s,r){return e(),n("div",null,[i])};export default l;export{a as __pageData};
