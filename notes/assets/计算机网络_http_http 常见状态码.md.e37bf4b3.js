import{o as e,c as t,a as l}from"./app.8c8a1ac2.js";const i='{"title":"http 常见状态码","description":"","frontmatter":{},"headers":[{"level":2,"title":"信息类状态码","slug":"信息类状态码"},{"level":2,"title":"成功类状态码","slug":"成功类状态码"}],"relativePath":"计算机网络/http/http 常见状态码.md","lastUpdated":1615825386319}',a={},d=l('<h1 id="http-常见状态码"><a class="header-anchor" href="#http-常见状态码" aria-hidden="true">#</a> http 常见状态码</h1><hr><p>http 的状态码表示 http 请求是否成功完成，http 状态码主要分为 5 类：</p><ul><li>信息类状态码（100-199</li><li>成功类状态码（200-299）</li><li>重定向类状态码（300-399）</li><li>客户端错误类状态码（400-499）</li><li>服务器错误状态码（500-599）</li></ul><hr><h2 id="信息类状态码"><a class="header-anchor" href="#信息类状态码" aria-hidden="true">#</a> 信息类状态码</h2><ul><li><p><code>100 Continue</code> 100 状态码表示当前一切正常，客户端应当继续发送请求，如果已经完成则忽略。</p></li><li><p><code>101 Switching protocol</code> 101 协议切换，表明服务器正在进行协议切换，如从 http 协议切换只 websocket 协议。</p></li><li><p><code>102 Processing</code> 102 表示服务器已经收到并正在处理请求，但没有响应可用于返回。</p></li><li><p><code>103 Early Hints</code> 103 状态码主要用于 <code>Link</code> 连接头一起使用，允许客户端在服务器仍在准备响应的时候预加载资源。</p></li></ul><h2 id="成功类状态码"><a class="header-anchor" href="#成功类状态码" aria-hidden="true">#</a> 成功类状态码</h2><ul><li><p><code>200 OK</code> 200 表示请求成功。</p></li><li><p><code>201 Created</code> 201 表示服务器已成功收到请求，并创建了一个资源。通常用于某些 POST 或 PUT 请求之后的返回响应。</p></li><li><p><code>202</code></p></li></ul>',9);a.render=function(l,i,a,o,p,r){return e(),t("div",null,[d])};export default a;export{i as __pageData};
